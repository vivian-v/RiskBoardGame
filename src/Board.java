import java.util.ArrayList;
import java.util.Scanner;

public class Board {
	int countryIndex;
	int dir= 0;
	private int numOfPlayers; 
	private Player[] players;
	private ArrayList<Country> countries;
	private ArrayList<Country> playerCountries;
	private ArrayList<String> countriesIdx;
	
	private Dice dice;
	private Deck deck;
	private Displayer show;
	int step = 0;
	String format = "%1$-5s | %2$-20s | %3$-24s | %4$-15s | %5$-11s | \n";
	
	public Board(Player[] p, ArrayList<Country> c, Deck dk, Dice d)
	{
		this.countryIndex = 0;
		this.players = p;
		this.countries = c;
		this.deck = dk;
		this.dice = d;
		this.show = new Displayer(c);
		numOfPlayers = p.length;
		setupCountryIndex();
		
		
	}
	public void setupCountryIndex()
	{
		countriesIdx = new ArrayList<String>();
		
		for (int i = 0; i < countries.size(); i++)
		{
			countriesIdx.add(countries.get(i).getCountryName());
		}
	}
	public void GameStart()
	{
		Boolean end = false;
		show.gameStart();	
		
		displayMapInfo();
		ArmyPlacement();
		int idx = 0;
		for (int i = 0; i < 1; i++)
		{
//			Fortify(players[idx].getPlayerID());
			displayMapInfo();
			displayPlayerInfo(players[idx].getPlayerID());
			Reinforce(players[idx].getPlayerID());
			Attack(players[idx].getPlayerID());
			 
		
		}
		
		//System.out.println(countries.get(getCountryIndex("China")).getOwnerName());
		
		displayMapInfo();
//		displayPlayerInfo(0);
		
	}

	public int getCountryIndex(String c)
	{
		if (countriesIdx.contains(c))
		{
			countryIndex = countriesIdx.indexOf(c);
			return countryIndex;
		}
		return -1;
	}
	public int getPlayerIndex(String c)
	{
		for (int i = 0; i < players.length; i++)
		{
			if (players[i].getPlayerName().equals(c))
				return i;
		}
		return -1;
	}
	public void Attack(int n)
	{
		ArrayList<String> TempCountryList;
		ArrayList<Integer> CheckDuplicatedNum = new ArrayList<Integer>();
		int AttackerDice;
		int DefenderDice;
		int[] AttackerRolls;
		int[] DefenderRolls;
		int num;
		int attackerIndex = 0;
		int defenderIndex = 0;
		int numAttackerLose = 0;
		int numDefenderLose = 0;
		String AttackerCountry;
		String DefenderCountry;
		
		Country C = new Country();
		
		show.spaceFormat();
		
		Scanner keyboard = new Scanner(System.in);
		playerCountries = players[n].showMyCountries();
		System.out.println("Choose one of your country to attack other country");
		
		for (int i = 0; i < playerCountries.size(); i++)
		{
			if (playerCountries.get(i).getNumOfArmy() > 1)
			{
				System.out.println((i + 1) + " : " + playerCountries.get(i).getCountryName() + " : Num of Army " + playerCountries.get(i).getNumOfArmy() );
				CheckDuplicatedNum.add(i+1);
			}
		}
		do
		{
			countryIndex = keyboard.nextInt() - 1;
			if (!CheckDuplicatedNum.contains(countryIndex + 1))
				System.out.println("Invalid Input");
		}while (!CheckDuplicatedNum.contains(countryIndex + 1));
		
		AttackerCountry = playerCountries.get(countryIndex).getCountryName();
		
		show.spaceFormat();
			
		System.out.println("Here is the List that you can attack from " + AttackerCountry + " to :");
		C = players[n].getCountry(AttackerCountry);
		TempCountryList = C.ShowAdjacency();
		
		int x = 0;
		int idx = 0;
		for (int i = 0; i < TempCountryList.size(); i++)
		{
			x = getCountryIndex(TempCountryList.get(i));
			if (players[n].getPlayerName() != countries.get(x).getOwnerName())
			{
				System.out.println((idx+1)+ " : " + TempCountryList.get(i) + " : Num of Army " +countries.get(getCountryIndex(TempCountryList.get(i))).getNumOfArmy());
				idx++;
			}
		}

		countryIndex = keyboard.nextInt() - 1;
		DefenderCountry = TempCountryList.get(countryIndex);
				
		defenderIndex = getCountryIndex(DefenderCountry);
		attackerIndex = getCountryIndex(AttackerCountry);
		num = 1;
		while (num != 2)
		{
			show.spaceFormat();
			show.announceAttack(players[n].getPlayerName(), AttackerCountry, countries.get(defenderIndex).getOwnerName(), DefenderCountry);
					
			show.diceMenu(players[n].getPlayerName(), "Attacker", countries.get(getCountryIndex(AttackerCountry)).getNumOfArmy());
		
			AttackerDice = keyboard.nextInt();
			//AttackerRolls = dice.roll(AttackerDice);
			AttackerRolls = dice.roll(10);

			show.diceMenu(players[defenderIndex].getPlayerName(), "Defender", countries.get(getCountryIndex(DefenderCountry)).getNumOfArmy());
			DefenderDice = keyboard.nextInt();
			DefenderRolls = dice.roll(DefenderDice);
			
			System.out.println("Attacker's highest number : " + AttackerRolls[AttackerRolls.length - 1]);
			System.out.println("Defender's highest number : " + DefenderRolls[DefenderRolls.length - 1]);
	
			if (AttackerRolls[AttackerRolls.length - 1] > DefenderRolls[DefenderRolls.length - 1])
			{
				System.out.println("Attacker won");
				numDefenderLose++;
			} else if (AttackerRolls[AttackerRolls.length - 1] <= DefenderRolls[DefenderRolls.length - 1])
			{
				System.out.println("Defender won");
	
				numAttackerLose++;
			}
			
			if (AttackerDice > 1 && DefenderDice > 1)
			{
				System.out.println("Attacker's Second Highest Number : " + AttackerRolls[AttackerRolls.length - 2]);
				System.out.println("Defender's Second Highest number : " + DefenderRolls[DefenderRolls.length - 2]);
				
				if (AttackerRolls[AttackerRolls.length - 2] > DefenderRolls[DefenderRolls.length - 2])
				{
					System.out.println("Attacker won");
	
					numDefenderLose++;
				} else if (AttackerRolls[AttackerRolls.length - 2] <= DefenderRolls[DefenderRolls.length - 2])
				{
					System.out.println("Defender won");
	
					numAttackerLose++;
				}
			}
			
			show.spaceFormat();
			countries.get(attackerIndex).MinusNumOfArmy(numAttackerLose);
			countries.get(defenderIndex).MinusNumOfArmy(numDefenderLose);
			
			if (countries.get(attackerIndex).getNumOfArmy() < 2)
			{
				System.out.println("You Don't Have Enough Army to Attack");
				break;
			} else if (countries.get(defenderIndex).getNumOfArmy() < 1)
			{
				num = 3;
				break;
			} 
			
			System.out.println("Attacker's Army left : " + countries.get(attackerIndex).getNumOfArmy());
			System.out.println("Defender's Army left : " + countries.get(defenderIndex).getNumOfArmy());
			
			show.afterCombatMenu();
		
			do {
				num = keyboard.nextInt();
			} while (num != 1 && num != 2);
			
			numDefenderLose = 0;
			numAttackerLose = 0;
	
		}
		
		if (num == 3)
		{
			defenderIndex = getPlayerIndex(countries.get(defenderIndex).getOwnerName());
			countries.get(defenderIndex).setOwerName(countries.get(attackerIndex).getOwnerName());

			players[n].takeCountry(countries.get(defenderIndex));
			players[defenderIndex].loseCountry(countries.get(defenderIndex));

			displayPlayerInfo(n);
			displayPlayerInfo(defenderIndex);
		} else
		{
			displayPlayerInfo(n);
			displayPlayerInfo(defenderIndex);
		}
	}
	public void Fortify(int n)
	{
		int idx = 0;
		ArrayList<Integer> countryListIndex = new ArrayList<Integer>();
		Scanner keyboard = new Scanner(System.in);
		
		System.out.println("Lists of your Countries that you can fortify");
		
		for (int i = 0; i < countries.size(); i++)
		{
			if (players[n].getPlayerName() == countries.get(i).getOwnerName() && countries.get(i).getNumOfArmy() > 1)
			{
				System.out.println((i + 1) + " : " + countries.get(i).getCountryName() + "  | Num of Army : " + countries.get(i).getNumOfArmy());
				countryListIndex.add(i);
				idx++;
			}
		}
		
		System.out.println("\nSelect a country");
		do {
			idx = keyboard.nextInt() - 1;
		} while(!countryListIndex.contains(idx));
		
		System.out.println(countries.get(idx).getCountryName());
	
		
	
	
	
	
	
	
	
	
	
	
	
	
	
	}
	
//	public void Reinforce(int n) //player index is being passed into parameter
//    {
//        // Troops based on the number of territories you occupy divided by 3 and truncated
//        int troopsByTerritory = players[n].getNumTerritoriesOwned() / 3;
//        System.out.println("You [" + players[n].getPlayerName() + "] own " + players[n].getNumTerritoriesOwned() + 
//                "territories. You get " + troopsByTerritory + " bonus troops.");
//
//        // Troops based on the value of the continents you control.
//        int troopsByRegion = 0;
//        
//        int[] x = {9, 4, 7, 6, 12, 4};
//        
//        
//        if (players[n].getNumNorthAmerica() == 9)
//        {
//            troopsByRegion += 5;
//            System.out.println("You own region: North America | +5 troops.");
//        }
//        if (players[n].getNumSouthAmerica() == 4)
//        {
//            troopsByRegion += 2;
//            System.out.println("You own region: South America | +2 troops.");
//        }
//        if (players[n].getNumEurope() == 7)
//        {
//            troopsByRegion += 5;
//            System.out.println("You own region: Europe | +3 troops.");
//        }
//        if (players[n].getNumAfrica() == 6)
//        {
//            troopsByRegion += 3;
//            System.out.println("You own Region: Africa | +3 troops");
//        }
//        if (players[n].getNumAsia() == 12)
//        {
//            troopsByRegion += 7;
//            System.out.println("You own Region: Asia | +7 troops");
//        }
//        if (players[n].getNumAustralia() == 4)
//        {
//            troopsByRegion += 2;
//            System.out.println("You own Region: Australia | +2 troops");
//        }
//        // print out which region they own 
//        System.out.println("You gain " + troopsByRegion + " total troops for the regions you own.");
//
//        // -200 IQ
//
//        // the value of the matched sets of RISK cards you trade in.
//    }
	public void displayPlayerInfo(int n)
	{
		show.spaceFormat();

		System.out.println(players[n].getPlayerName() + "'s Information\n");
		System.out.format(format, "Index", "Region" ,"Country Name", "Land Owner", "Num of Army");
		playerCountries = players[n].showMyCountries();

		for (int i = 0; i < playerCountries.size(); i++)
		{
			   System.out.format(format, i+1, playerCountries.get(i).getContinent(),playerCountries.get(i).getCountryName(), playerCountries.get(i).getOwnerName(), playerCountries.get(i).getNumOfArmy());
		}
		
		System.out.println("\n=Statistic=");
		System.out.println("Number of Troops : " + players[n].getPlayerTroops());
		
		System.out.println("1. North America : " + players[n].getNumNorthAmerica());
		System.out.println("2. South America : " + players[n].getNumSouthAmerica());
		System.out.println("3. Europe        : " + players[n].getNumEurope());
		System.out.println("4. Africa        : " + players[n].getNumAfrica());
		System.out.println("5. Asia          : " + players[n].getNumAsia());
		System.out.println("6. Australia     : " + players[n].getNumAustralia());

		
		
	}
	public void displayMenu()
	{
		
	}
	public void ArmyPlacement()
	{
		ArrayList<Integer> checkDuplicatedNum = new ArrayList<Integer>();
		int TotalCountry = 42;
		boolean check = false;
		int idx = 0;
		int k = 0;
		Scanner keyboard = new Scanner(System.in);	// To get user input
		
		int testindex1 = 1;
		int testindex2 = 1;
		
		while (players[numOfPlayers - 1].getPlayerTroops() != 0)
		{
			System.out.println(players[k].getPlayerName() + "'s turn. Please, select a country ");
			for (int i = 0; i< countries.size(); i++)
			{
				if ((!countries.get(i).isOccupied()))
				{
					System.out.println(i + 1 + " : " + countries.get(i).getCountryName());	
					
				}else if ((countries.get(i).getOwnerName() == players[k].getPlayerName()) && check)
				{
					System.out.println(i + 1 + " : " + countries.get(i).getCountryName());	
				}
			}			
			if (!check
			{
				do
				{
					idx = testindex1++;
					//idx = keyboard.nextInt();
					if (!check)
					{
						if (idx < 1 || idx > 42 || checkDuplicatedNum.contains(idx))
							System.out.println("invalid input, please do it again");
					} 
				} while (idx < 1 || idx > 42 || checkDuplicatedNum.contains(idx));
			} else
			{
				do
				{
					idx = testindex2++;
					//idx = keyboard.nextInt();
					if (!check)
					{
						if (idx < 1 || idx > 42)
							System.out.println("invalid input, please do it again");
					} 
				} while (idx < 1 || idx > 42);
				
			}

			checkDuplicatedNum.add(idx);

			countries.get(idx - 1).setOwerName(players[k].getPlayerName());
			countries.get(idx - 1).AddNumOfArmy(1);
			players[k].putOneAmry();
			if (!check)
			players[k].takeCountry(countries.get(idx - 1));

			if (k == numOfPlayers - 1)
				k = 0;
			else 
				k++;
			
			TotalCountry--;
			if (TotalCountry == 0)
				check = true;
		}
		
		show.placementEnd();
	}

	public void displayMapInfo()
	{
		System.out.format(format, "Index", "Region" ,"Country Name", "Land Owner", "Num of Army");
		for (int i = 0; i < countries.size(); i++)
		{
			   System.out.format(format, i+1, countries.get(i).getContinent(),countries.get(i).getCountryName(), countries.get(i).getOwnerName(), countries.get(i).getNumOfArmy());
		}
	
	}
}
